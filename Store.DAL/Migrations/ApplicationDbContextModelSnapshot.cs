// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store.DAL.Context;

namespace Store.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Store.DAL.Entity.ProductsOrder", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("OrderProductsId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "OrderProductsId");

                    b.HasIndex("OrderProductsId");

                    b.ToTable("ProductsOrder");
                });

            modelBuilder.Entity("Store.DAL.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreOrderId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Store.DAL.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StoreProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StoreProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Store.DAL.Stores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Store.DAL.Entity.ProductsOrder", b =>
                {
                    b.HasOne("Store.DAL.Order", "Order")
                        .WithMany("ProductsOrder")
                        .HasForeignKey("OrderProductsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Store.DAL.Products", "Products")
                        .WithMany("ProductsOrder")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Store.DAL.Order", b =>
                {
                    b.HasOne("Store.DAL.Stores", "Stores")
                        .WithMany("Order")
                        .HasForeignKey("StoreOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("Store.DAL.Products", b =>
                {
                    b.HasOne("Store.DAL.Stores", "Stores")
                        .WithMany("Products")
                        .HasForeignKey("StoreProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("Store.DAL.Order", b =>
                {
                    b.Navigation("ProductsOrder");
                });

            modelBuilder.Entity("Store.DAL.Products", b =>
                {
                    b.Navigation("ProductsOrder");
                });

            modelBuilder.Entity("Store.DAL.Stores", b =>
                {
                    b.Navigation("Order");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
